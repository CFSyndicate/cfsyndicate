---
import MainLayout from "../layouts/MainLayout.astro";
import "../styles/global.css";
---

<MainLayout title="Home">
  <!-- Hero Section -->
  <section class="text-center py-20 md:py-32 px-6 bg-hero">
    <!-- Hero Owl Slot -->
    <div class="w-24 h-32 mx-auto mb-6 text-5xl">
      <div id="hero-owl" class="owl-container mx-auto w-24 h-32 mb-6 relative">
      </div>
    </div>

    <h1
      class="text-5xl md:text-7xl mb-6 text-white noselect title-glow"
      style="font-family: 'Anton', sans-serif;"
    >
      Concord Forge Syndicate
    </h1>

    <p
      class="punchline text-xl md:text-3xl max-w-2xl mx-auto text-white mt-8 md:mt-16 noselect"
      style="font-family: 'Poppins', sans-serif;"
    >
      <span>Code crafted <span class="highlight-strong">strong</span>.</span>
      <span>Design refined <span class="highlight-sharp">sharp</span>.</span>
      <span
        >Ideas forged into <span class="highlight-solutions">solutions</span
        >.</span
      >
    </p>
  </section>

  <!-- What We Do Section -->
  <section class="py-16 bg-black/50">
    <div class="container mx-auto px-6 text-center">
      <h2 class="text-3xl mb-10">
        From Desktop to the Web, We Build It Right.
      </h2>
      <div class="grid md:grid-cols-3 gap-8">
        <!-- Card 1 -->
        <div class="bg-white/5 p-8 rounded-lg border border-white/10">
          <h3 class="text-xl text-forge-accent mb-2">Desktop Applications</h3>
          <p class="text-forge-text-secondary">
            Reliable and performant applications for Windows and Linux, tailored
            to your workflow.
          </p>
        </div>
        <!-- Card 2 -->
        <div class="bg-white/5 p-8 rounded-lg border border-white/10">
          <h3 class="text-xl text-forge-accent mb-2">Web Services & APIs</h3>
          <p class="text-forge-text-secondary">
            Secure, scalable backends and APIs built with Python, JavaScript,
            and modern frameworks.
          </p>
        </div>
        <!-- Card 3 -->
        <div class="bg-white/5 p-8 rounded-lg border border-white/10">
          <h3 class="text-xl text-forge-accent mb-2">Web Apps & Interfaces</h3>
          <p class="text-forge-text-secondary">
            Clean, intuitive, and fast user interfaces using modern web
            technologies.
          </p>
        </div>
      </div>
    </div>
  </section>

  <!-- Our Toolkit Section -->
  <section class="py-16">
    <div class="container mx-auto px-6 text-center">
      <h2 class="text-3xl mb-10">Our areas of expertise</h2>
      <div
        class="flex flex-wrap justify-center items-center gap-4 text-forge-text-secondary"
      >
        <span
          class="inline-flex items-center gap-x-2 bg-white/5 px-3 py-2 rounded-full border border-white/10"
        >
          <img
            class="h-4 w-4"
            src="/cfsyndicate/lang/python.svg"
            alt="Python Logo"
          />
          Python
        </span>
        <span
          class="inline-flex items-center gap-x-2 bg-white/5 px-3 py-2 rounded-full border border-white/10"
        >
          <img class="h-4 w-4" src="/cfsyndicate/lang/cpp.svg" alt="C++ Logo" />
          C++</span
        >
        <span
          class="inline-flex items-center gap-x-2 bg-white/5 px-3 py-2 rounded-full border border-white/10"
        >
          <img
            class="h-4 w-4"
            src="/cfsyndicate/lang/typescript.svg"
            alt="C++ Logo"
          />
          TypeScript</span
        >
        <span
          class="inline-flex items-center gap-x-2 bg-white/5 px-3 py-2 rounded-full border border-white/10"
        >
          <img
            class="h-4 w-4"
            src="/cfsyndicate/lang/csharp.svg"
            alt="C++ Logo"
          />
          C# / .NET</span
        >

        <span
          class="inline-flex items-center gap-x-2 bg-white/5 px-3 py-2 rounded-full border border-white/10"
        >
          <img
            class="h-4 w-4"
            src="/cfsyndicate/lang/windows.svg"
            alt="C++ Logo"
          />
          Windows</span
        >
        <span
          class="inline-flex items-center gap-x-2 bg-white/5 px-3 py-2 rounded-full border border-white/10"
        >
          <img
            class="h-4 w-4"
            src="/cfsyndicate/lang/linux.svg"
            alt="C++ Logo"
          />
          Linux</span
        >
      </div>
    </div>
  </section>

  <!-- Procedural Owl Generator Section -->
  <section class="py-16 bg-black/50">
    <div class="container mx-auto px-6 text-center">
      <h2 class="text-3xl mb-10">
        Procedural Owl <span class="highlight-strong-subtle">Forge</span>
      </h2>

      <div id="owlCanvas" class="mx-auto w-40 h-48"></div>

      <div class="mt-4">
        <p class="text-sm text-gray-400 mb-2">
          Current Seed: <code
            id="current-seed-display"
            class="bg-black/20 px-2 py-1 rounded"></code>
        </p>
        <input
          id="seed-input"
          type="text"
          placeholder="Enter a seed to forge..."
          class="bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-center text-white"
        />
      </div>

      <div class="mt-6 flex flex-wrap justify-center gap-2">
        <!-- The main "Forge" button -->
        <button
          id="regenOwl"
          class="px-6 py-2 bg-orange-500 text-black font-bold rounded-lg hover:bg-orange-400 active:scale-95 transition-all"
        >
          Forge New Owl
        </button>

        <!-- NEW: The "Save to Gallery" Button -->
        <button
          id="saveOwlBtn"
          class="group relative flex items-center justify-center gap-2 px-6 py-2 bg-slate-800 text-slate-300 font-semibold rounded-lg border border-slate-700
           hover:border-orange-500 hover:bg-slate-700 hover:text-white
           active:scale-95
           disabled:bg-slate-800 disabled:text-slate-500 disabled:cursor-not-allowed
           transition-all duration-200 ease-in-out"
        >
          <!-- Spinner (hidden by default) -->
          <svg
            class="animate-spin h-5 w-5 text-slate-500 hidden"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
          >
            <circle
              class="opacity-25"
              cx="12"
              cy="12"
              r="10"
              stroke="currentColor"
              stroke-width="4"></circle>
            <path
              class="opacity-75"
              fill="currentColor"
              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
            ></path>
          </svg>

          <!-- Button Text -->
          <span class="button-text">Save to Gallery</span>
        </button>

        <!-- The "Share" button -->
        <button
          id="shareOwlBtn"
          class="px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-500 active:scale-95 transition-all"
        >
          Share Owl
        </button>
      </div>
    </div>
  </section>

  <style>
    .bg-grid-pattern {
      background-color: #000000;
      background-image: linear-gradient(
          rgba(225, 93, 2, 0.1) 1px,
          transparent 1px
        ),
        linear-gradient(90deg, rgba(225, 93, 2, 0.1) 1px, transparent 1px);
      background-size: 3rem 3rem;
    }
  </style>

  <script>
    import {
      generateMemorableSeed,
      generateShareableImage,
      forgeAndDisplay,
    } from "../lib/owls";

    const titles = [
      "The",
      "Lord",
      "Lady",
      "Sir",
      "Elder",
      "Agent",
      "Captain",
      "",
    ];
    const adjectives = [
      "Clever",
      "Wise",
      "Silent",
      "Swift",
      "Ancient",
      "Golden",
      "Iron",
      "Stout",
      "Keen",
      "Shadow",
      "Runic",
      "Arcane",
      "Gilded",
      "Sturdy",
      "Ashen",
      "Sable",
      "Wired",
      "Digital",
      "Forged",
      "Hollow",
      "Vigilant",
      "First",
      "Last",
    ];
    const nouns = [
      "Owl",
      "Forge",
      "Anvil",
      "Talon",
      "Feather",
      "Rune",
      "Hammer",
      "Spark",
      "Heart",
      "Wing",
      "Cinder",
      "Ember",
      "Codex",
      "Glyph",
      "Circuit",
      "Matrix",
      "Sentinel",
      "Guardian",
      "Key",
      "Core",
      "Spire",
      "Vertex",
      "Cipher",
    ];

    document.addEventListener("astro:page-load", () => {
      // Get all elements
      const heroContainer = document.getElementById("hero-owl");
      const owlCanvas = document.getElementById("owlCanvas");
      const regenBtn = document.getElementById("regenOwl");
      const seedInput = document.getElementById("seed-input");
      const seedDisplay = document.getElementById("current-seed-display");

      const shareBtn = document.getElementById("shareOwlBtn");
      const shareModal = document.getElementById("share-modal");
      const closeModalBtn = document.getElementById("close-modal-btn");
      const shareImagePreview = document.getElementById("share-image-preview");
      const shareTwitter = document.getElementById("share-twitter");
      const shareBsky = document.getElementById("share-bsky");
      const saveBtn = document.getElementById("saveOwlBtn");

      // UPDATED: Button click logic handles strings
      regenBtn.addEventListener("click", () => {
        let seedToUse = seedInput.value.trim();
        if (!seedToUse) {
          seedToUse = generateMemorableSeed(); // Generate new if input is empty
        }

        owlCanvas.classList.add("swoosh-out");
        setTimeout(() => {
          forgeAndDisplay(owlCanvas, seedToUse);
          owlCanvas.classList.remove("swoosh-out");
          owlCanvas.classList.add("swoosh-in");
          setTimeout(() => owlCanvas.classList.remove("swoosh-in"), 300);
        }, 300);

        seedInput.value = "";
      });

      shareBtn.addEventListener("click", async () => {
        const currentSeed = seedDisplay.textContent;
        await generateShareableImage(owlCanvas, currentSeed, shareImagePreview);

        // Prepare share links
        const shareText = `I forged this owl at the Concord Forge Syndicate! Seed: ${currentSeed}`;
        const shareUrl = `https://cfsyndicate.github.io/cfsyndicate?seed=${encodeURIComponent(currentSeed)}`;

        shareTwitter.href = `https://x.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${encodeURIComponent(shareUrl)}&via=cfsyndicate`;
        shareBsky.href = `https://bsky.app/intent/compose?text=${encodeURIComponent(shareText)}%0A%0A${encodeURIComponent(shareUrl)}`;

        shareModal.classList.remove("hidden");
      });

      closeModalBtn.addEventListener("click", () => {
        shareModal.classList.add("hidden");
      });

      if (saveBtn) {
        const spinner = saveBtn.querySelector("svg");
        const buttonText = saveBtn.querySelector(".button-text");

        saveBtn.addEventListener("click", async () => {
          // --- 1. Set Loading State ---
          saveBtn.disabled = true;
          spinner.classList.remove("hidden");
          buttonText.textContent = "Saving...";

          const currentSeed = seedDisplay.textContent;
          const currentGender = owlCanvas.dataset.owlGender;

          try {
            const response = await fetch(
              "https://form-handler-api.onrender.com/owls/",
              {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                  seed: currentSeed,
                  gender: currentGender,
                }),
              }
            );

            if (response.ok) {
              // --- 2. Set Success State ---
              spinner.classList.add("hidden");
              buttonText.textContent = "Saved!";
              setTimeout(() => {
                // Reset after 2 seconds
                buttonText.textContent = "Save to Gallery";
                saveBtn.disabled = false;
              }, 2000);
            } else {
              // --- 3. Set Error State ---
              const errorData = await response.json();
              alert(`Error: ${errorData.detail}`);
              spinner.classList.add("hidden");
              buttonText.textContent = "Save to Gallery";
              saveBtn.disabled = false;
            }
          } catch (error) {
            // --- 4. Set Network Failure State ---
            console.error("Failed to save owl:", error);
            alert("Could not connect to the gallery. Please try again later.");
            spinner.classList.add("hidden");
            buttonText.textContent = "Save to Gallery";
            saveBtn.disabled = false;
          }
        });
      }

      // Initial generation
      const initialHeroSeed = generateMemorableSeed();
      const initialCanvasSeed = generateMemorableSeed();
      forgeAndDisplay(heroContainer, initialHeroSeed);
      forgeAndDisplay(owlCanvas, initialCanvasSeed);
      makeOwlInteractive(heroContainer);
      makeOwlInteractive(owlCanvas);
    });
  </script>
</MainLayout>
