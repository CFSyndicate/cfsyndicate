---
// src/pages/aviary.astro
import MainLayout from "../layouts/MainLayout.astro";
import OwlCard from "../components/OwlCard.astro";

// Fetch all owls from your FastAPI backend when the page is built
let owls = [];
let fetchError = null;

try {
  // NOTE: For production, use an environment variable for the API URL
  const response = await fetch("https://form-handler-api.onrender.com/owls/");
  if (response.ok) {
    owls = await response.json();
  } else {
    throw new Error(`API responded with status: ${response.status}`);
  }
} catch (error) {
  console.error("Could not fetch owls from the forge:", error);
  fetchError =
    "The connection to the Ember Aviary is currently down. Please try again later.";
}
---

<MainLayout
  title="The Ember Aviary"
  description="A gallery of unique owls forged by our visitors."
>
  <div class="container mx-auto max-w-7xl px-6 py-12 md:py-20">
    <!-- Page Header -->
    <div class="text-center mb-12">
      <h1
        class="text-4xl font-extrabold md:text-6xl text-balance bg-gradient-to-r from-orange-400 to-red-500 text-transparent bg-clip-text"
      >
        The Ember Aviary
      </h1>
      <p class="mt-4 text-lg text-slate-300 max-w-2xl mx-auto">
        A collection of unique owls, forged in our digital workshop and saved by
        our visitors.
      </p>
    </div>

    <!-- Owl Grid -->
    {
      fetchError ? (
        <div class="text-center text-red-400 bg-red-900/50 p-4 rounded-lg">
          <p>{fetchError}</p>
        </div>
      ) : (
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6">
          {owls.map((owl) => (
            <OwlCard id={owl.id} seed={owl.seed} likeCount={owl.like_count} />
          ))}
        </div>
      )
    }
  </div>
</MainLayout>

<style is:global>
  /* Optional: Add a subtle grid pattern to the background for thematic consistency */
  body {
    background-color: #111; /* A slightly lighter black */
    background-image: linear-gradient(
        rgba(225, 93, 2, 0.05) 1px,
        transparent 1px
      ),
      linear-gradient(90deg, rgba(225, 93, 2, 0.05) 1px, transparent 1px);
    background-size: 3rem 3rem;
  }
</style>
